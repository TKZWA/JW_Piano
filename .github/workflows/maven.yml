name: Publish Plugin

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 1 Check main
      uses: actions/checkout@v3
      with:
       fetch-depth: 0   
    
    - name: 2 Set up JDK 16
      uses: actions/setup-java@v3
      with:
        java-version: '16'
        distribution: 'corretto'
        cache: maven
    - name: 2.5 Create Versions
      id: version
      uses: PaulHatch/semantic-version@v4.0.2
      with:
          tag_prefix: ""
          major_pattern: "MAJOR"
          minor_pattern: "MINOR"
          format: "${major}.${minor}.${patch}"
          namespace: Release
          change_path: "."
          short_tags: false
          bump_each_commit: false    
        
    
    - name: 3 Include SpigotApi
      run: mvn install:install-file -Dfile=${GITHUB_WORKSPACE}/lib/SpigotFluentApi.jar -DgroupId=jw -DartifactId=SpigotFluentApi -Dversion=1.0.0 -Dpackaging=jar
      
    - name: 3.2 Build with Maven
      run: mvn package -P publish -Dversion=${{steps.version.outputs.version_tag}} --file pom.xml  
  
    - name: 4.1 copy jar files
      run: mkdir staging && cp target/JW_Piano-${{ steps.version.outputs.version_tag }}-shaded.jar staging 
   
    - name: 4.3 rename file
      run: (cd staging && mv JW_Instruments-${{ steps.version.outputs.version_tag }}-shaded.jar JW_Piano.jar)
      
    - name: 4.3 zip resourcepack
      run: (cd pianopack && zip -r - .) >pianopack.zip
      
      
    - name: 6 set up a cache for maven
      uses: actions/cache@v2
      with:
         path: ~/.m2
         key: ${{runner.os}}-m2-${{hashFiles('**/pom.xml')}}
         restore-keys: ${{runner.os}}-m2

    - name: 7 Create Artifacts
      uses: actions/upload-artifact@v2
      with:
         name: ${{ steps.version.outputs.version_tag }}
         path: staging
 
    - name:  8 Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.version.outputs.version_tag }}
          prerelease: false
          title: ${{ steps.version.outputs.version_tag }}
          files: |
              staging/*.jar
              pianopack.zip
